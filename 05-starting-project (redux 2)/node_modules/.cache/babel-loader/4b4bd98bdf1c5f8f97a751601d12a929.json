{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobso\\\\Desktop\\\\React Projects\\\\05-starting-project (redux 2)\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { showCart } from \"./store/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const toggleCart = useSelector(state => state.cart.isActive);\n  const cart = useSelector(state => state.product);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(showCart.showNotification({\n        status: \"pending\",\n        title: \"sending...\",\n        message: \"Sending cart data\"\n      }));\n      const response = await fetch(\"https://some-cart-products-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n\n      dispatch(showCart.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [toggleCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"oh3ZIcWluULlHxmHcEOH8ykpDOo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/05-starting-project (redux 2)/src/App.js"],"names":["Cart","Layout","Products","showCart","useSelector","useDispatch","useEffect","App","dispatch","toggleCart","state","cart","isActive","product","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,QAAvB,CAA9B;AAEA,QAAMD,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACG,OAAlB,CAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,YAAY,GAAG,YAAY;AAChCN,MAAAA,QAAQ,CACPL,QAAQ,CAACY,gBAAT,CAA0B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA1B,CADO,CAAR;AAOA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,kEAD2B,EAE3B;AACCC,QAAAA,MAAM,EAAE,KADT;AAECC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFP,OAF2B,CAA5B;;AAQA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AACjB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA;;AAEDlB,MAAAA,QAAQ,CACPL,QAAQ,CAACY,gBAAT,CAA0B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA1B,CADO,CAAR;AAOA,KA3BD;AA4BA,GA7BQ,EA6BN,CAACP,IAAD,CA7BM,CAAT;AA+BA,sBACC,QAAC,MAAD;AAAA,eACEF,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADhB,eAEC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GA3CQF,G;UACSF,W,EACED,W,EAENA,W;;;KAJLG,G;AA6CT,eAAeA,GAAf","sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { showCart } from \"./store/index\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst toggleCart = useSelector((state) => state.cart.isActive);\n\n\tconst cart = useSelector((state) => state.product);\n\n\tuseEffect(() => {\n\t\tconst sendCartData = async () => {\n\t\t\tdispatch(\n\t\t\t\tshowCart.showNotification({\n\t\t\t\t\tstatus: \"pending\",\n\t\t\t\t\ttitle: \"sending...\",\n\t\t\t\t\tmessage: \"Sending cart data\",\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://some-cart-products-default-rtdb.firebaseio.com/cart.json\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\tbody: JSON.stringify(cart),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"Sending cart data failed.\");\n\t\t\t}\n\n\t\t\tdispatch(\n\t\t\t\tshowCart.showNotification({\n\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\ttitle: \"Success!\",\n\t\t\t\t\tmessage: \"Sent cart data successfully!\",\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\t}, [cart]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{toggleCart && <Cart />}\n\t\t\t<Products />\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}