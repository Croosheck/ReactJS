{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    isActive: false\n  },\n  reducers: {\n    toggleCart(state) {\n      state.isActive = !state.isActive;\n    }\n\n  }\n});\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    items: [],\n    quantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n    },\n\n    addOne(state) {\n      state.quantity++;\n    },\n\n    minusOne(state) {\n      if (state.quantity === 0) return;\n      state.quantity--;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    product: productSlice.reducer\n  }\n});\nexport const showCart = cartSlice.actions;\nexport const modifyProduct = productSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/05-starting-project (redux 2)/src/store/index.js"],"names":["createSlice","configureStore","cartSlice","name","initialState","isActive","reducers","toggleCart","state","productSlice","items","quantity","totalPrice","addItem","action","newItem","payload","existingItem","find","item","id","addOne","minusOne","store","reducer","cart","product","showCart","actions","modifyProduct"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACH,QAAN,GAAiB,CAACG,KAAK,CAACH,QAAxB;AACA;;AAHQ;AAHmB,CAAD,CAA7B;AAUA,MAAMI,YAAY,GAAGT,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACbM,IAAAA,KAAK,EAAE,EADM;AAEbC,IAAAA,QAAQ,EAAE,CAFG;AAGbC,IAAAA,UAAU,EAAE;AAHC,GAFkB;AAOhCN,EAAAA,QAAQ,EAAE;AACTO,IAAAA,OAAO,CAACL,KAAD,EAAQM,MAAR,EAAgB;AACtB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGT,KAAK,CAACE,KAAN,CAAYQ,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACA,KAJQ;;AAKTC,IAAAA,MAAM,CAACb,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACG,QAAN;AACA,KAPQ;;AAQTW,IAAAA,QAAQ,CAACd,KAAD,EAAQ;AACf,UAAIA,KAAK,CAACG,QAAN,KAAmB,CAAvB,EAA0B;AAC1BH,MAAAA,KAAK,CAACG,QAAN;AACA;;AAXQ;AAPsB,CAAD,CAAhC;AAsBA,MAAMY,KAAK,GAAGtB,cAAc,CAAC;AAC5BuB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEvB,SAAS,CAACsB,OAAlB;AAA2BE,IAAAA,OAAO,EAAEjB,YAAY,CAACe;AAAjD;AADmB,CAAD,CAA5B;AAIA,OAAO,MAAMG,QAAQ,GAAGzB,SAAS,CAAC0B,OAA3B;AACP,OAAO,MAAMC,aAAa,GAAGpB,YAAY,CAACmB,OAAnC;AACP,eAAeL,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n\tname: \"cart\",\r\n\tinitialState: { isActive: false },\r\n\treducers: {\r\n\t\ttoggleCart(state) {\r\n\t\t\tstate.isActive = !state.isActive;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst productSlice = createSlice({\r\n\tname: \"product\",\r\n\tinitialState: {\r\n\t\titems: [],\r\n\t\tquantity: 0,\r\n\t\ttotalPrice: 0,\r\n\t},\r\n\treducers: {\r\n\t\taddItem(state, action) {\r\n\t\t\tconst newItem = action.payload;\r\n\t\t\tconst existingItem = state.items.find((item) => item.id === newItem.id);\r\n\t\t},\r\n\t\taddOne(state) {\r\n\t\t\tstate.quantity++;\r\n\t\t},\r\n\t\tminusOne(state) {\r\n\t\t\tif (state.quantity === 0) return;\r\n\t\t\tstate.quantity--;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: { cart: cartSlice.reducer, product: productSlice.reducer },\r\n});\r\n\r\nexport const showCart = cartSlice.actions;\r\nexport const modifyProduct = productSlice.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}