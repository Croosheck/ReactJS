{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobso\\\\Desktop\\\\React Projects\\\\03-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/03-starting-project/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","storedUserLoggedInInformation","getItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GALD;;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,6BAA6B,GAAGF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAtC;;AACA,QAAID,6BAA6B,KAAK,GAAtC,EAA2C;AAC1CN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC3BJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAT,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAKA,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACND,MAAAA,UAAU,EAAEA;AADN,KADR;AAAA,4BAKC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,iBACE,CAACA,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADjB,EAEEF,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAnCQV,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tconst loginHandler = (email, password) => {\n\t\t// We should of course check email and password\n\t\t// But it's just a dummy/ demo anyways\n\t\tlocalStorage.setItem(\"isLoggedIn\", \"1\");\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tuseEffect(() => {\n\t\tconst storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\t\tif (storedUserLoggedInInformation === \"1\") {\n\t\t\tsetIsLoggedIn(true);\n\t\t}\n\t}, []);\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem(\"isLoggedIn\");\n\t\tsetIsLoggedIn(false);\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisLoggedIn: isLoggedIn,\n\t\t\t}}\n\t\t>\n\t\t\t<MainHeader />\n\t\t\t<main>\n\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t</main>\n\t\t</AuthContext.Provider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}