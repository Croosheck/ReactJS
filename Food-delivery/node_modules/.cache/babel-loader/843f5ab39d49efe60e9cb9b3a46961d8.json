{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobso\\\\Desktop\\\\React Projects\\\\Food delivery\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/Food delivery/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n\titems: [],\r\n\ttotalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n\tif (action.type === \"ADD\") {\r\n\t\tconst updatedTotalAmount =\r\n\t\t\tstate.totalAmount + action.item.price * action.item.amount;\r\n\r\n\t\tconst existingCartItemIndex = state.items.findIndex(\r\n\t\t\t(item) => item.id === action.item.id\r\n\t\t);\r\n\t\tconst existingCartItem = state.items[existingCartItemIndex];\r\n\t\tlet updatedItems;\r\n\r\n\t\tif (existingCartItem) {\r\n\t\t\tconst updatedItem = {\r\n\t\t\t\t...existingCartItem,\r\n\t\t\t\tamount: existingCartItem.amount + action.item.amount,\r\n\t\t\t};\r\n\t\t\tupdatedItems = [...state.items];\r\n\t\t\tupdatedItems[existingCartItemIndex] = updatedItem;\r\n\t\t} else {\r\n\t\t\tupdatedItems = state.items.concat(action.item);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\titems: updatedItems,\r\n\t\t\ttotalAmount: updatedTotalAmount,\r\n\t\t};\r\n\t}\r\n\tif (action.type === \"REMOVE\") {\r\n\t\tconst existingCartItemIndex = state.items.findIndex(\r\n\t\t\t(item) => item.id === action.item.id\r\n\t\t);\r\n\t\tconst existingItem = state.items[existingCartItemIndex];\r\n\t\tconst updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\t}\r\n\treturn defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n\tconst [cartState, dispatchCartAction] = useReducer(\r\n\t\tcartReducer,\r\n\t\tdefaultCartState\r\n\t);\r\n\r\n\tconst addItemToCartHandler = (item) => {\r\n\t\tdispatchCartAction({ type: \"ADD\", item: item });\r\n\t};\r\n\r\n\tconst removeItemFromCartHandler = (id) => {\r\n\t\tdispatchCartAction({ type: \"REMOVE\", id: id });\r\n\t};\r\n\r\n\tconst cartContext = {\r\n\t\titems: cartState.items,\r\n\t\ttotalAmount: cartState.totalAmount,\r\n\t\taddItem: addItemToCartHandler,\r\n\t\tremoveItem: removeItemFromCartHandler,\r\n\t};\r\n\treturn (\r\n\t\t<CartContext.Provider value={cartContext}>\r\n\t\t\t{props.children}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}