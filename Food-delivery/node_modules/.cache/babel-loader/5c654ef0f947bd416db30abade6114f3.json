{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobso\\\\Desktop\\\\React Projects\\\\Food delivery\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = !isFiveChars(enteredPostal);\n    setFormInputsValidity({\n      name: enteredCityIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //submit\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Checkout, \"PYcowyMlb5m1aVJ1O/0wtciBrcg=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/Food delivery/src/components/Cart/Checkout.js"],"names":["React","useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postal","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n\tconst [formInputsValidity, setFormInputsValidity] = useState({\r\n\t\tname: true,\r\n\t\tstreet: true,\r\n\t\tcity: true,\r\n\t\tpostal: true,\r\n\t});\r\n\r\n\tconst nameInputRef = useRef();\r\n\tconst streetInputRef = useRef();\r\n\tconst postalInputRef = useRef();\r\n\tconst cityInputRef = useRef();\r\n\r\n\tconst confirmHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst enteredName = nameInputRef.current.value;\r\n\t\tconst enteredStreet = streetInputRef.current.value;\r\n\t\tconst enteredPostal = postalInputRef.current.value;\r\n\t\tconst enteredCity = cityInputRef.current.value;\r\n\r\n\t\tconst enteredNameIsValid = !isEmpty(enteredName);\r\n\t\tconst enteredStreetIsValid = !isEmpty(enteredStreet);\r\n\t\tconst enteredCityIsValid = !isEmpty(enteredCity);\r\n\t\tconst enteredPostalIsValid = !isFiveChars(enteredPostal);\r\n\r\n\t\tsetFormInputsValidity({\r\n\t\t\tname: enteredCityIsValid,\r\n\t\t\tstreet: enteredStreetIsValid,\r\n\t\t\tcity: enteredCityIsValid,\r\n\t\t\tpostal: enteredPostalIsValid,\r\n\t\t});\r\n\r\n\t\tconst formIsValid =\r\n\t\t\tenteredNameIsValid &&\r\n\t\t\tenteredStreetIsValid &&\r\n\t\t\tenteredCityIsValid &&\r\n\t\t\tenteredPostalIsValid;\r\n\r\n\t\tif (!formIsValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//submit\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\r\n\t\t\t\t<input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n\t\t\t\t{!formInputsValidity.name && <p>Please enter a valid name</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor=\"street\">Street</label>\r\n\t\t\t\t<input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n\t\t\t\t{!formInputsValidity.street && <p>Please enter a valid street name</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor=\"postal\">Postal Code</label>\r\n\t\t\t\t<input type=\"text\" id=\"postal\" ref={postalInputRef} />\r\n\t\t\t\t{!formInputsValidity.postal && <p>Please enter a valid postal code</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor=\"city\">City</label>\r\n\t\t\t\t<input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n\t\t\t\t{!formInputsValidity.city && <p>Please enter a valid city name</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.actions}>\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classes.submit}>Confirm</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}