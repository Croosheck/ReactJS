{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobso\\\\Desktop\\\\06-rotuing-practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuoteDetail() {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  let quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Show Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n\n_s(QuoteDetail, \"9AKpDu/Y8NgUsSl9nURO+XFyZY4=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/bobso/Desktop/06-rotuing-practice/src/pages/QuoteDetail.js"],"names":["React","useRouteMatch","useParams","Route","Link","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetail","params","match","sendRequest","status","data","loadedQuote","error","quote","DUMMY_QUOTES","find","id","quoteId","fontSize","author","text","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACtB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAGV,aAAa,EAA3B;AAEA,QAAM;AACLW,IAAAA,WADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA,IAAI,EAAEC,WAHD;AAILC,IAAAA;AAJK,MAKFT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;AAOA,MAAIS,KAAK,GAAGC,YAAY,CAACC,IAAb,CAAmBF,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaV,MAAM,CAACW,OAAjD,CAAZ;;AAEA,MAAI,CAACJ,KAAL,EAAY;AACX,wBACC;AACC,MAAA,KAAK,EAAE;AACNK,QAAAA,QAAQ,EAAE;AADJ,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAED,sBACC;AAAA,4BACC,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEL,KAAK,CAACM,MAAhC;AAAwC,MAAA,IAAI,EAAEN,KAAK,CAACO;AAApD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEb,KAAK,CAACc,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACC,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEd,KAAK,CAACe,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eASC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEf,KAAK,CAACc,IAAK,WAA3B;AAAA,6BACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GAxCQhB,W;UACOP,S,EACDD,a,EAOVM,O;;;KATIE,W;AA0CT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useParams, Route, Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nfunction QuoteDetail() {\r\n\tconst params = useParams();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuote,\r\n\t\terror,\r\n\t} = useHttp(getSingleQuote, true);\r\n\r\n\tlet quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n\tif (!quote) {\r\n\t\treturn (\r\n\t\t\t<p\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tfontSize: \"25px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tNo quote found!\r\n\t\t\t</p>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<HighlightedQuote author={quote.author} text={quote.text} />\r\n\t\t\t<Route path={match.path} exact>\r\n\t\t\t\t<div className=\"centered\">\r\n\t\t\t\t\t<Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n\t\t\t\t\t\tShow Comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}