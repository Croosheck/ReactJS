{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      state.toggleState = !state.toggleState;\n    }\n\n  }\n}); // const counterReducer = (state = { counter: 0, toggleState: true }, action) => {\n// \tif (action.type === \"increment\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter + 1,\n// \t\t\ttoggleState: state.toggleState,\n// \t\t};\n// \t}\n// \tif (action.type === \"increase\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter + action.amount,\n// \t\t\ttoggleState: state.toggleState,\n// \t\t};\n// \t}\n// \tif (action.type === \"decrement\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter - 1,\n// \t\t\ttoggleState: state.toggleState,\n// \t\t};\n// \t}\n// \tif (action.type === \"toggle\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter,\n// \t\t\ttoggleState: !state.toggleState,\n// \t\t};\n// \t}\n// \treturn state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/bobso/Desktop/React Projects/04-starting-project (redux)/src/store/index.js"],"names":["createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","amount","toggle","toggleState","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,SAD0B;AAEhCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAFkB;AAGhCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACJ,OAAN;AACA,KAHQ;;AAITK,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACJ,OAAN;AACA,KANQ;;AAOTM,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAAvC;AACA,KATQ;;AAUTC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACM,WAAN,GAAoB,CAACN,KAAK,CAACM,WAA3B;AACA;;AAZQ;AAHsB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAC5BgB,EAAAA,OAAO,EAAEf,YAAY,CAACe;AADM,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AACP,eAAeH,KAAf","sourcesContent":["// import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst counterSlice = createSlice({\r\n\tname: \"counter\",\r\n\tinitialState: { counter: 0, showCounter: true },\r\n\treducers: {\r\n\t\tincrement(state) {\r\n\t\t\tstate.counter++;\r\n\t\t},\r\n\t\tdecrement(state) {\r\n\t\t\tstate.counter--;\r\n\t\t},\r\n\t\tincrease(state, action) {\r\n\t\t\tstate.counter = state.counter + action.amount;\r\n\t\t},\r\n\t\ttoggle(state) {\r\n\t\t\tstate.toggleState = !state.toggleState;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n// const counterReducer = (state = { counter: 0, toggleState: true }, action) => {\r\n// \tif (action.type === \"increment\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + 1,\r\n// \t\t\ttoggleState: state.toggleState,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"increase\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + action.amount,\r\n// \t\t\ttoggleState: state.toggleState,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"decrement\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter - 1,\r\n// \t\t\ttoggleState: state.toggleState,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"toggle\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter,\r\n// \t\t\ttoggleState: !state.toggleState,\r\n// \t\t};\r\n// \t}\r\n// \treturn state;\r\n// };\r\n\r\nconst store = configureStore({\r\n\treducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}